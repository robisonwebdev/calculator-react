{"version":3,"sources":["modules/CalculatorButtons.js","components/Header.js","components/Display.js","components/Button.js","components/Controls.js","modules/MathOperations.js","components/Calculator.js","components/Main.js","components/Footer.js","App.js","index.js"],"names":["module","exports","name","button","value","class","Header","text","Display","display","arrayInputs","displayArray","map","input","index","length","charAt","className","Button","btn","onClick","Controls","buttons","userInput","placeButtons","math","add","a","b","divide","multiple","percentage","plusNegative","subtract","Calculator","useState","require","calculatorButtons","decimal","setDecimal","setDisplay","inputs","setInputs","operator","setOperator","useEffect","window","addEventListener","handleKeyPress","removeEventListener","event","key","numberInputs","nonNumberInputs","handleOperator","valueOne","valueTwo","updatedInputs","getLastInput","at","splice","slice","newArray","forEach","operation","includes","operatorPosition","findIndex","getSum","parseFloat","calculate","push","newValue","toString","number","Main","Footer","address","href","target","rel","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fd646890.chunk.js","sourcesContent":["const calculatorButtons = [\n    {\n        name: 'clear',\n        button: 'C',\n        value: 'clear',\n        class: 'border-bottom border-right hover-yellow'\n    },\n    {\n        name: 'plusMinus',\n        button: '±',\n        value: '-1',\n        class: 'border-bottom border-right hover-yellow'\n    },\n    {\n        name: 'percent',\n        button: '%',\n        value: '%',\n        class: 'border-bottom border-right hover-yellow'\n    },\n    {\n        name: 'divide',\n        button: '÷',\n        value: '/',\n        class: 'border-bottom button-purple'\n    },\n    {\n        name: 'seven',\n        button: '7',\n        value: 7,\n        class: 'border-bottom border-right hover-yellow'\n    },\n    {\n        name: 'eight',\n        button: '8',\n        value: 8,\n        class: 'border-bottom border-right hover-yellow'\n    },\n    {\n        name: 'nine',\n        button: '9',\n        value: 9,\n        class: 'border-bottom border-right hover-yellow'\n    },\n    {\n        name: 'times',\n        button: 'x',\n        value: '*',\n        class: 'border-bottom button-purple'\n    },\n    {\n        name: 'four',\n        button: '4',\n        value: 4,\n        class: 'border-bottom border-right hover-yellow'\n    },\n    {\n        name: 'five',\n        button: '5',\n        value: 5,\n        class: 'border-bottom border-right hover-yellow'\n    },\n    {\n        name: 'six',\n        button: '6',\n        value: 6,\n        class: 'border-bottom border-right hover-yellow'\n    },\n    {\n        name: 'minus',\n        button: '-',\n        value: '-',\n        class: 'border-bottom button-purple'\n    },\n    {\n        name: 'one',\n        button: '1',\n        value: 1,\n        class: 'border-bottom border-right hover-yellow'\n    },\n    {\n        name: 'two',\n        button: '2',\n        value: 2,\n        class: 'border-bottom border-right hover-yellow'\n    },\n    {\n        name: 'three',\n        button: '3',\n        value: 3,\n        class: 'border-bottom border-right hover-yellow'\n    },\n    {\n        name: 'plus',\n        button: '+',\n        value: '+',\n        class: 'border-bottom button-purple'\n    },\n    {\n        name: 'zero',\n        button: '0',\n        value: 0,\n        class: 'border-right hover-yellow'\n    },\n    {\n        name: 'decimal',\n        button: '.',\n        value: '.',\n        class: 'border-right hover-yellow'\n    },\n    {\n        name: 'backspace',\n        button: '←',\n        value: 'back',\n        class: 'border-right hover-yellow'\n    },\n    {\n        name: 'equal',\n        button: '=',\n        value: 'calculate',\n        class: 'button-yellow'\n    }\n\n];\n\nmodule.exports = calculatorButtons;","import React from 'react';\nimport '../styles/Header.css';\n\nconst Header = ({ text }) => {\n  return (\n    <header>\n      <h1>{text}</h1>\n    </header>\n  );\n}\n\nexport default Header;","import React from 'react';\nimport '../styles/Display.css';\n\nconst Display = ({ display }) => {\n  let arrayInputs = [...display];\n  let displayArray = arrayInputs.map((input, index) => {\n    // Puts no brackets around single negative number in array\n    if (arrayInputs.length === 1 && input.charAt(0) === '-') {\n      return <p key={index}>{input}</p>\n    }\n\n    // Puts bracket around negative number\n    if (input.charAt(0) === '-' && input.length !== 1) {\n      return <p key={index}>({input})</p>;\n    }\n\n    // Changes * to x\n    if (input === '*') {\n      return <p key={index}>x</p>;\n    }\n\n    // Changed / to ÷\n    if (input === '/') {\n      return <p key={index}>÷</p>\n    }\n\n    // Default return\n    return <p key={index}>{input}</p>\n  })\n\n  return (\n    <div className='display'>\n      {displayArray}\n    </div>\n  );\n}\n\nexport default Display;","import React from 'react';\nimport '../styles/Button.css';\n\nconst Button = ({ className, btn, onClick, value }) => {\n  return (\n    <button className={className} onClick={() => onClick(value)}>{btn}</button>\n  );\n}\n\nexport default Button;","import React from 'react';\nimport Button from './Button';\nimport '../styles/Controls.css';\n\nconst Controls = ({ buttons, userInput }) => {  \n  const placeButtons = buttons.map(button => <Button key={button.name} className={button.class} btn={button.button} onClick={userInput} value={button.value} />)\n\n  return (\n    <div className='controls'>\n      {placeButtons}\n    </div>\n  );\n}\n\nexport default Controls;","const math = {\n    add: function(a, b) {\n        return a + b;\n    },\n    divide: function(a, b) {\n        if (b === 0) {\n            return (null);\n        } else {\n            return a / b;\n        }\n    },\n    multiple: function(a, b) {\n        return a * b;\n    },\n    percentage: function(a) {\n        return (a / 100);\n    },\n    plusNegative: function(a) {\n        return (-1 * a);\n    },\n    subtract: function(a, b) {\n        return a - b;\n    }\n};\n\nexport default math;","import React, { useEffect, useState } from 'react';\nimport Display from './Display';\nimport Controls from './Controls';\nimport math from '../modules/MathOperations';\nimport '../styles/Calculator.css';\n\nconst Calculator = () => {\n  const [calculatorButtons] = useState(require('../modules/CalculatorButtons'));\n  const [decimal, setDecimal] = useState(true);\n  const [display, setDisplay] = useState([]);\n  const [inputs, setInputs] = useState(['0']);\n  const [operator, setOperator] = useState(false);\n\n  // Updates display when inputs changes.\n  useEffect(() => {\n    setDisplay(inputs);\n  }, [inputs])\n\n  // Update inputs to zero, if length is 1 and empty string\n  useEffect(() => {\n    if (inputs.length === 1 && inputs[0] === '') {\n      setInputs(['0']);\n    }\n  }, [inputs])\n\n  // Keyboard listener\n  useEffect(() => {\n    window.addEventListener('keydown', handleKeyPress);\n \n    return () => {\n      window.removeEventListener('keydown', handleKeyPress)\n    }\n  })\n\n  const handleKeyPress = (event) => {\n    const key = event.key;\n    // Keyboard numbers inputs\n    if (key >= 0 && key <= 9) {\n      numberInputs(key);\n    }\n\n    // Keyboard nonNumber inputs\n    if (key === '/' || key === '*' || key === '+' || key === '-' || key === '.' || key ==='%') {\n      nonNumberInputs(key);\n    }\n\n    // Keyboard backspace\n    if (key === 'Backspace') {\n      nonNumberInputs('back');\n    }\n\n    // Keyboard equal/Enter\n    if (key === '=' || key === 'Enter') {\n      nonNumberInputs('calculate');\n    }\n\n    // Keyboard delete/clear\n    if (key === 'Delete') {\n      nonNumberInputs('clear');\n    }\n\n    // Keyboard plus/Negative\n    if (key === '!') {\n      nonNumberInputs('-1');\n    }\n  }\n\n  const calculate = () => {\n    const orderOfOperations = ['*', '/', '+', '-'];\n    const newArray = [...inputs];\n\n    orderOfOperations.forEach(operation => {\n      while (newArray.includes(operation)) {\n        let operatorPosition = newArray.findIndex(operator => operator === operation);\n        let getSum = handleOperator(parseFloat(newArray[operatorPosition -1]), operation, parseFloat(newArray[operatorPosition + 1]));\n\n        newArray.splice(operatorPosition -1, 3, getSum);\n      }\n    })\n\n    setInputs([`${newArray[0]}`]);\n  }\n\n  const handleOperator = (valueOne, operator, valueTwo) => {\n    switch (operator) {\n      case '+':\n        return math.add(valueOne, valueTwo);\n      case '-':\n        return math.subtract(valueOne, valueTwo);\n      case '*':\n        return math.multiple(valueOne, valueTwo);\n      case '/':\n        return math.divide(valueOne, valueTwo);\n      default:\n        return null;\n    }\n  }\n\n  const nonNumberInputs = (input) => {\n    const updatedInputs = [...inputs];\n    const getLastInput = inputs.at(-1);\n\n    // Back Button\n    if (input === 'back') {\n      if (getLastInput === '') {\n        updatedInputs.splice(-2, 2);\n        setOperator(true);\n      } else {\n        // Check for decimal\n        if (getLastInput.charAt(getLastInput.length - 1) === '.') {\n          setDecimal(true);\n        }\n        updatedInputs[updatedInputs.length - 1] = getLastInput.slice(0, -1);\n      }\n\n      setInputs(updatedInputs);\n    }\n\n    // Equal Button\n    if (input === 'calculate' && operator === true) {\n      calculate();\n    }\n\n    // Clear Button\n    if (input === 'clear') {\n      setDecimal(true);\n      setInputs(['0']);\n      setOperator(false);\n    }\n\n    // Decimal Button\n    if (input === '.' && decimal === true) {\n      updatedInputs[updatedInputs.length - 1] = getLastInput + input;\n      setInputs(updatedInputs);\n      setDecimal(false);\n    }\n\n    // Operation Buttons\n    if ((input === '/' || input === '*' || input === '-' || input === '+') && operator) {\n      updatedInputs.push(input);\n      updatedInputs.push('');\n      setInputs(updatedInputs);\n      setOperator(false);\n      setDecimal(true);\n    }\n\n    // Percentage Button\n    if (input === '%') {\n      const newValue = math.percentage(getLastInput);\n\n      updatedInputs[updatedInputs.length - 1] = newValue.toString();\n      setInputs(updatedInputs);\n    }\n\n    // Plus/Negative Button\n    if (input === '-1') {\n      const newValue = math.plusNegative(getLastInput);\n\n      updatedInputs[updatedInputs.length - 1] = newValue.toString();\n      setInputs(updatedInputs);\n    }\n  }\n\n  const numberInputs = (input) => {\n    const number = input.toString();\n    const updatedInputs = [...inputs];\n    const getLastInput = inputs.at(-1);\n\n    if (inputs.length === 1 && getLastInput === '0') {\n      setInputs(number);\n      setOperator(true);\n    } else {\n      updatedInputs[updatedInputs.length - 1] = getLastInput + number;\n      setInputs(updatedInputs);\n      setOperator(true);\n    }\n  }\n\n  const userInput = (input) => {\n    // Ternary to determine which function to run based on input type.\n    return typeof input === 'number' ? numberInputs(input) : nonNumberInputs(input);\n  }\n\n  return (\n    <div className='calculator'>\n      <Display\n        display={display}\n      />\n      <Controls\n        buttons={calculatorButtons}\n        userInput={userInput}\n      />\n    </div>\n  );\n}\n\nexport default Calculator;","import React from 'react';\nimport Calculator from './Calculator';\nimport '../styles/Main.css';\n\nconst Main = () => {\n  return (\n    <div className='main'>\n      <Calculator />\n    </div>\n  );\n}\n\nexport default Main;","import React from 'react';\nimport '../styles/Footer.css';\n\nconst Footer = ({ address, name, text }) => {\n  return (\n    <footer>\n      <small>{text}<a href={address} target='_blank' rel='noreferrer'>{name}</a></small>\n    </footer>\n  );\n}\n\nexport default Footer;","import React from 'react';\nimport Header from './components/Header';\nimport Main from './components/Main';\nimport Footer from './components/Footer';\nimport './styles/App.css';\n\nconst App = () => {\n  return (\n    <div className='app'>\n      <Header text='Calculator (React Version)' />\n      <Main />\n      <Footer\n        address='https://github.com/robisonwebdev'  \n        name='David Robsion'\n        text='Developed by '\n      />\n    </div>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './styles/index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}